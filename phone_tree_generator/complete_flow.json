{
    "states": [
        {
            "transitions": [
                {
                    "event": "incomingMessage"
                }, 
                {
                    "event": "incomingCall", 
                    "next": "play_welcome_sample"
                }, 
                {
                    "event": "incomingRequest"
                }
            ], 
            "type": "trigger", 
            "name": "Trigger", 
            "properties": {
                "offset": {
                    "y": -800, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "play_welcome_sample", 
            "properties": {
                "play": "https://crimson-kangaroo-7755.twil.io/assets/121048__thirsk__150-haunted-house-synth.wav", 
                "loop": 1, 
                "offset": {
                    "y": -400, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "main_menu"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_main_menu"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "main_menu", 
            "properties": {
                "say": "Thank you for calling the BLING HOTLINE. \n\n The appearance of safety is important. To ensure the emotional safety of our customers, we must review any symptoms you may be experiencing.\n\n If you are experiencing an INSATIABLE URGE TO DANCE, press 1.\n\nIf you\u2019re not sure if you are dreaming, press 2.\n\nIf you are disillusioned with our dystopian timeline and would like to choose another, press 3.\n\nIf you\u2019re being chased by an army of health goth pigeons Press 4.\n\nIf you are trying to log in to america online press 5.\n\nIf you forgot all the options and do not want to listen to this menu again, press 7.\n\nYou are at the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": -800, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.main_menu.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.main_menu.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_start_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.main_menu.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 4", 
                            "arguments": [
                                "{{widgets.main_menu.Digits}}"
                            ], 
                            "value": "4"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_start_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 5", 
                            "arguments": [
                                "{{widgets.main_menu.Digits}}"
                            ], 
                            "value": "5"
                        }
                    ], 
                    "event": "match", 
                    "next": "aol_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 6", 
                            "arguments": [
                                "{{widgets.main_menu.Digits}}"
                            ], 
                            "value": "6"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 7", 
                            "arguments": [
                                "{{widgets.main_menu.Digits}}"
                            ], 
                            "value": "7"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.main_menu.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_main_menu", 
            "properties": {
                "input": "{{widgets.main_menu.Digits}}", 
                "offset": {
                    "y": -650, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "return_to_main_menu"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_return_to_main_menu"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "return_to_main_menu", 
            "properties": {
                "say": "Press 0 to return to the main menu. To hang up, hang up.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": -400, 
                    "x": -300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.return_to_main_menu.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.return_to_main_menu.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_return_to_main_menu", 
            "properties": {
                "input": "{{widgets.return_to_main_menu.Digits}}", 
                "offset": {
                    "y": -250, 
                    "x": -300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_start_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_start_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_start_0", 
            "properties": {
                "say": "You\u2019re being chased by health goth pigeons? Don\u2019t just stand there, run! \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 0.0, 
                    "x": 3600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_start_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_start_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_start_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_start_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_start_0", 
            "properties": {
                "input": "{{widgets.goth_pigeon_start_0.Digits}}", 
                "offset": {
                    "y": 150.0, 
                    "x": 3600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_start_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_start_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_start_1", 
            "properties": {
                "say": "Get a little farther away, for fucks\u2019 sake! But be careful, CARS ARE REAL. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 375.0, 
                    "x": 3600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_start_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_speech"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_start_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_start_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_start_1", 
            "properties": {
                "input": "{{widgets.goth_pigeon_start_1.Digits}}", 
                "offset": {
                    "y": 525.0, 
                    "x": 3600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "goth_pigeon_main_choice"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_main_choice"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_speech", 
            "properties": {
                "say": "Where are you now? Look around you. Describe what you see. Go on, I\u2019ll wait.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 3600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_main_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_main_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_main_choice", 
            "properties": {
                "say": "You can do it! Press 1 to build a trap to catch the pigeons. Press 2 to report your pigeons to the fashion police for crimes against spandex. Press 3 if you\u2019re like \u201cwtf is a health goth\u201d. Press 4 to befriend the pigeons. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 3600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_main_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.goth_pigeon_main_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.goth_pigeon_main_choice.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_3_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 4", 
                            "arguments": [
                                "{{widgets.goth_pigeon_main_choice.Digits}}"
                            ], 
                            "value": "4"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_4"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_main_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_main_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_main_choice", 
            "properties": {
                "input": "{{widgets.goth_pigeon_main_choice.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 3600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "goth_pigeon_trap"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_trap"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_1", 
            "properties": {
                "say": "Ideally you\u2019ll need moisture wicking fabric. It has to be black or grey, though. If you dressed for the occasion in magenta or seafoam green, I\u2019m sorry to tell you, it isn\u2019t going to attract those pigeons. If you don\u2019t have any moisture-wicking fabric, look around you. What else do you see that you could make a pigeon trap with?", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_trap"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_trap"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_trap", 
            "properties": {
                "say": "You manage to MacGuyver a trap out of some human hair, duct tape, hand sanitizer, and left over Junior Mints from back when movies were a thing. Your world is safe from health goth pigeons...for now. But what are you missing? Press 1 to try something else.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_trap.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_main_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.goth_pigeon_trap.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_trap.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_trap"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_trap", 
            "properties": {
                "input": "{{widgets.goth_pigeon_trap.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": 3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "goth_pigeon_listen"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_listen"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_2", 
            "properties": {
                "say": "Just kidding. In this house, we don\u2019t call the cops on people. Even the fashion police. The fashion police are only a few letters away from the fascist police. What makes you think you have the right to pass judgement on what other beings are wearing? Even if, okay, sure, they are chasing you, and their intentions are vaguely ominous. \n\n I once dated a girl who was terrified of pigeons. I asked why, and she said she saw one get stuck in a girl\u2019s hair once. I said \u201cbaby, your hair is less than an inch long.\u201d \n\n If there are other groups of players nearby, I want you to ask them some questions. Don\u2019t worry, I\u2019ll wait. If there are no other groups nearby, just tell me your answers instead. What are you irrationally afraid of?", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 3300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_listen"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_listen"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_listen", 
            "properties": {
                "say": "The pigeons listen attentively. You have won. Press 1 to learn more about health goth pigeons\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 3300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_listen.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_main_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.goth_pigeon_listen.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_listen.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_listen"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_listen", 
            "properties": {
                "input": "{{widgets.goth_pigeon_listen.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": 3300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_3_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_3_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_3_0", 
            "properties": {
                "say": "Health goth is an aesthetic movement started by some vaporwave musicians from Portland. It\u2019s hard to describe an aesthetic movement over the phone, so thanks for bearing with me. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000.0, 
                    "x": 3900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_3_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_3_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_3_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_3_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_3_0", 
            "properties": {
                "input": "{{widgets.goth_pigeon_3_0.Digits}}", 
                "offset": {
                    "y": 2150.0, 
                    "x": 3900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_3_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_3_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_3_1", 
            "properties": {
                "say": "\"Health Goth \"relies on an anti-nostalgic dystopian present,\" providing \"an ethos of mythologizing our technological present\" and that \"reimagining the present future by mocking self-awareness as a Humanist project of little efficacy\". \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2375.0, 
                    "x": 3900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_3_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_3_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_3_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_3_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_3_1", 
            "properties": {
                "input": "{{widgets.goth_pigeon_3_1.Digits}}", 
                "offset": {
                    "y": 2525.0, 
                    "x": 3900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_3_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_3_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_3_2", 
            "properties": {
                "say": "Anyone trying to tell you that Health Goth is about goths working out has simply taken the two words at face value and opted for a less challenging, and extremely boring alternative.\n\nSaying that Health Goth is about goths working out is like saying that cyberpunk is Johnny Rotten doing spreadsheets on a Dell. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2750.0, 
                    "x": 3900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_3_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_3_question"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_3_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_3_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_3_2", 
            "properties": {
                "input": "{{widgets.goth_pigeon_3_2.Digits}}", 
                "offset": {
                    "y": 2900.0, 
                    "x": 3900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "goth_pigeon_id"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_id"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_3_question", 
            "properties": {
                "say": "If there are other groups of players nearby, I want you to ask them some questions. Don\u2019t worry, I\u2019ll wait. If there are no other groups nearby, just tell me your answer. What kinds of identities have you held in the past that are no longer important to you?", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3200, 
                    "x": 3900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_id"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_id"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_id", 
            "properties": {
                "say": "The pigeons listen attentively. They will listen to better music from here on in. Press 1 to learn more about health goth pigeons\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3600, 
                    "x": 3900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_id.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_main_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.goth_pigeon_id.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_id.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_id"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_id", 
            "properties": {
                "input": "{{widgets.goth_pigeon_id.Digits}}", 
                "offset": {
                    "y": 3750, 
                    "x": 3900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_4"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_4"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_4", 
            "properties": {
                "say": "Press 1 to ask the pigeons about themselves. Pigeons are just as self centered as humans even if they don\u2019t want to admit it. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 4200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_4_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_4"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_4", 
            "properties": {
                "input": "{{widgets.goth_pigeon_4.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": 4200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_4_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_4_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_4_2", 
            "properties": {
                "say": "They are still dive bombing at your head. Press 1 to shout WHO HURT U, PIGEONS, JEEZ \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 4200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_4_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_4_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_4_2", 
            "properties": {
                "input": "{{widgets.goth_pigeon_4_2.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": 4200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_4_3"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_4_3"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_4_3", 
            "properties": {
                "say": "They laugh, but they stop swooping at your face. Press 1 to offer them a thimble-sized shot glass of your beer. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": 4200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4_3.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_4_4"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4_3.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_4_3"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_4_3", 
            "properties": {
                "input": "{{widgets.goth_pigeon_4_3.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": 4200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "goth_pigeon_4_4"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_goth_pigeon_4_4"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "goth_pigeon_4_4", 
            "properties": {
                "say": "They apologize. It\u2019s been a hard year. You nod. It\u2019s all good.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3200, 
                    "x": 4200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4_4.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_main_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4_4.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.goth_pigeon_4_4.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "goth_pigeon_4_4"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_goth_pigeon_4_4", 
            "properties": {
                "input": "{{widgets.goth_pigeon_4_4.Digits}}", 
                "offset": {
                    "y": 3350, 
                    "x": 4200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "aol_main_choice"
                }, 
                {
                    "event": "timeout", 
                    "next": "aol_main_choice"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "aol_start", 
            "properties": {
                "say": "Well, don\u2019t just stand there, make some modem noises. I\u2019m waiting", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 0, 
                    "x": 4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "aol_main_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_aol_main_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "aol_main_choice", 
            "properties": {
                "say": "You\u2019re a one or a zero. Hurtling through a dark tube underneath the ocean. If you slow down, you\u2019ll die. But wait. A firewall blocks your path. Press 1 to resist. Press 2 to give up. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 400, 
                    "x": 4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.aol_main_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "aol_choice_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.aol_main_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "aol_choice_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.aol_main_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "aol_main_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_aol_main_choice", 
            "properties": {
                "input": "{{widgets.aol_main_choice.Digits}}", 
                "offset": {
                    "y": 550, 
                    "x": 4500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "aol_main_story"
                }, 
                {
                    "event": "timeout", 
                    "next": "aol_main_story"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "aol_choice_1", 
            "properties": {
                "say": "You put up a valiant fight. You zig, the router zags. You beep, the router boops. Please perform the firewall dance. I'll wait.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": 4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "aol_choice_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_aol_choice_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "aol_choice_2", 
            "properties": {
                "say": "Knowing when to give up is a valuable skill. Your signals may die as you enter oblivion, but your information lives on. Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": 4800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.aol_choice_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "aol_main_story"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.aol_choice_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "aol_choice_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_aol_choice_2", 
            "properties": {
                "input": "{{widgets.aol_choice_2.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": 4800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "aol_main_meditation"
                }, 
                {
                    "event": "timeout", 
                    "next": "aol_main_meditation"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "aol_main_story", 
            "properties": {
                "say": "Luckily, the way that TCP works, the information you were embodying is guaranteed to arrive anyway. You\u2019ll be reborn. But is the reborn version really you? Do cyber dolphins dream of electric sheep? \n\n Think about all the infrastructure you take for granted. About how easy it is to not notice things until they break. \n\n If there are other groups of players nearby, I want you to ask them some questions. Don\u2019t worry, I\u2019ll wait. If there are no other groups nearby, just tell me your answers instead. How has the internet changed since you first started using it?", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "aol_main_meditation"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_aol_main_meditation"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "aol_main_meditation", 
            "properties": {
                "say": "Everything alive, everything organic comes in waves. The internet is a complex system, a living thing. From where I\u2019m sitting, there are waves of centralization and decentralization. Wishing all your friends were on a specific platform quickly morphs into \u201cthere are too many people, this is a bonfire, I\u2019m going to retreat over to my private corner of cyberspace. Although, as always, I suspect the root cause is capitalism if you dig deep enough. Oh, I forgot, you were trying to connect to the AOL. Apologies for the digression. Press 1 to connect. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.aol_main_meditation.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "aol_mail"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.aol_main_meditation.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "aol_main_meditation"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_aol_main_meditation", 
            "properties": {
                "input": "{{widgets.aol_main_meditation.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 4500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "aol_mail", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/m1.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2000, 
                    "x": 4500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_start"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_yoga_start"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_start", 
            "properties": {
                "say": "There is no number 6. \n\n There are no statues. \n\n There is no army of health goth pigeons.\n\n  There is only the void. Press 1 if you would like to scream into the void. \n\n Press 2 if you would like to scream into the void. \n\n Press 3 if you are in a yoga class and you would like to do a loud, dramatic sigh instead. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 0, 
                    "x": 6000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.yoga_start.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.yoga_start.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.yoga_start.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_sigh_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.yoga_start.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_start"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_yoga_start", 
            "properties": {
                "input": "{{widgets.yoga_start.Digits}}", 
                "offset": {
                    "y": 150, 
                    "x": 6000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_void_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_yoga_void_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_void_1", 
            "properties": {
                "say": "The urge to scream is the most understandable thing in the world, given everything that\u2019s going ON in the world at the moment. Nevertheless, don\u2019t be an asshole. Before you scream into the void, look around you. Are there other people nearby? Check, then press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 400, 
                    "x": 6300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.yoga_void_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.yoga_void_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_yoga_void_1", 
            "properties": {
                "input": "{{widgets.yoga_void_1.Digits}}", 
                "offset": {
                    "y": 550, 
                    "x": 6300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_void_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_yoga_void_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_void_2", 
            "properties": {
                "say": "Be considerate to what\u2019s going on around you. Modulate your volume to an appropriate level. Maybe announce \u201cnothing\u2019s wrong, I just need to scream for a minute\u201d first. People will get it. It\u2019s a very 2020 mood. Let's count down together. Press 3 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": 6300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.yoga_void_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.yoga_void_2.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.yoga_void_2.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.yoga_void_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_yoga_void_2", 
            "properties": {
                "input": "{{widgets.yoga_void_2.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": 6300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_void_3"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_yoga_void_3"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_void_3", 
            "properties": {
                "say": "Press 2 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 6300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.yoga_void_3.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.yoga_void_3.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_4"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.yoga_void_3.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_3"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_yoga_void_3", 
            "properties": {
                "input": "{{widgets.yoga_void_3.Digits}}", 
                "offset": {
                    "y": 1350, 
                    "x": 6300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_void_4"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_yoga_void_4"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_void_4", 
            "properties": {
                "say": "Press 1 to scream with me. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 6300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.yoga_void_4.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_5"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.yoga_void_4.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_4"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_yoga_void_4", 
            "properties": {
                "input": "{{widgets.yoga_void_4.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 6300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "yoga_void_6"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_void_6"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_void_5", 
            "properties": {
                "say": "Three. Two. One. AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 6300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_void_6"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_yoga_void_6"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_void_6", 
            "properties": {
                "say": "To try something more relaxing, press 1.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 6300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.yoga_void_6.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.yoga_void_6.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.yoga_void_6.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_void_6"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_yoga_void_6", 
            "properties": {
                "input": "{{widgets.yoga_void_6.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 6300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "yoga_sigh_2"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_sigh_2"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_sigh_1", 
            "properties": {
                "say": "First off, I want to acknowledge that yoga as it is practiced in the west is cultural appropriation, a lot of the time. Now that we\u2019ve gotten that out of the way...do you ever wish yoga was a little less..run by hippies? \n\n If there are other groups of players nearby, I want you to ask them some questions. Don\u2019t worry, I\u2019ll wait. If there are no other groups nearby, just tell me your answers instead. What kind of music would you want at your yoga class, if you were in charge? ", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 400, 
                    "x": 6000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_sigh_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_yoga_sigh_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_sigh_2", 
            "properties": {
                "say": "For some reason, I always picture yoga teachers walking around doing hits of nitrous oxide. Making no corrections to my form. But still telling me to breathe deeply. \n\n Anyway. Let\u2019s all take a deep breath. If there are other people nearby, invite them to join you. Press 1 when you are ready. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": 6000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.yoga_sigh_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_sigh_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.yoga_sigh_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_sigh_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_yoga_sigh_2", 
            "properties": {
                "input": "{{widgets.yoga_sigh_2.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": 6000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "yoga_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_sigh_3", 
            "properties": {
                "say": "Exhale all the air in your lungs. Fill them slowly. When you think you\u2019re full, take another tiny sip of air. Let it out, emitting a loud sigh, and picture all the fucks you have to to give leaving your body. \n\n\n MMMMMMMMMMMMMMMMMMMMMMMMMM", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 6000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "yoga_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_yoga_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "yoga_end", 
            "properties": {
                "say": "To try something less relaxing, press 1.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 6000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.yoga_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.yoga_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.yoga_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "yoga_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_yoga_end", 
            "properties": {
                "input": "{{widgets.yoga_end.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 6000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "dance_speech_0"
                }, 
                {
                    "event": "timeout", 
                    "next": "dance_speech_0"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dance_start", 
            "properties": {
                "say": "When I want to go dancing, the first thing I do is put on a cute outfit. \n\nYou said you\u2019re already in a dancing mood, but I\u2019m curious. What are you wearing?", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": -400, 
                    "x": -4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dance_speech_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dance_speech_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dance_speech_0", 
            "properties": {
                "say": "That\u2019s the perfect thing to dance in! I\u2019m wearing a procedurally generated description of a vaporwave outfit. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 0.0, 
                    "x": -4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dance_speech_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_speech_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dance_speech_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_speech_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dance_speech_0", 
            "properties": {
                "input": "{{widgets.dance_speech_0.Digits}}", 
                "offset": {
                    "y": 150.0, 
                    "x": -4500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dance_speech_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dance_speech_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dance_speech_1", 
            "properties": {
                "say": "The first time I fell in love, I was 17. I snuck out to go to a rave. I was wearing baggy JNCO jeans and a lavender tank top. I\u2019d hand written the words \u201csynthesizers have feelings too\u201d on it in a sharpie. At the rave, I saw a girl with killer dimples, spiky magenta hair, and blue eyes. She also had a handwritten slogan scrawled across her tank top. I knew I was queer, but I had never kissed a girl before. I didn\u2019t know how to make that happen. That pink-haired babe came up to me, smiled, and told me her name was Charlie. That turned out to be a lie, but she told me I was cute and pressed her lips into mine, and nothing else mattered after that. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 375.0, 
                    "x": -4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dance_speech_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_love"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dance_speech_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_speech_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dance_speech_1", 
            "properties": {
                "input": "{{widgets.dance_speech_1.Digits}}", 
                "offset": {
                    "y": 525.0, 
                    "x": -4500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dance_love"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dance_love"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dance_love", 
            "properties": {
                "say": "Put the person next to you on the line. Ask them to tell me about the first time that they fell in love. Press 1 when they\u2019ve done so. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": -4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dance_love.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dance_love.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_love"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dance_love", 
            "properties": {
                "input": "{{widgets.dance_love.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": -4500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dance_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dance_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dance_choice", 
            "properties": {
                "say": "I would say \u201cdance like nobody is watching\u201d but this isn\u2019t a fucking yogurt commercial or a Pinterest board full of trite inspirational phrases. Press 1 if you feel like dancing fast. Press 2 if you feel like dancing slow. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": -4500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dance_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_fast"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dance_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_slow"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dance_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dance_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dance_choice", 
            "properties": {
                "input": "{{widgets.dance_choice.Digits}}", 
                "offset": {
                    "y": 1350, 
                    "x": -4500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "dance_fast", 
            "properties": {
                "play": "https://files.freemusicarchive.org/storage-freemusicarchive-org/music/no_curator/Anonymous420/Anonymous420_-_Singles/Anonymous420_-_05_-_no.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 1600, 
                    "x": -4800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "dance_slow", 
            "properties": {
                "play": "https://files.freemusicarchive.org/storage-freemusicarchive-org/music/Reverse_Engine/Water_Features/Water_Features/Water_Features_-_05_-_Acclimation_Studio_Mix.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 1600, 
                    "x": -4200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_start_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_start_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_start_0", 
            "properties": {
                "say": "Consciousness is a funny thing. If you think \u201cI\u2019m conscious\u201d or \u201cI\u2019m unconscious\u201d is a binary, you are wrong. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": -400.0, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_start_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_start_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_start_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_start_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_start_0", 
            "properties": {
                "input": "{{widgets.dream_start_0.Digits}}", 
                "offset": {
                    "y": -250.0, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_start_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_start_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_start_1", 
            "properties": {
                "say": "Down with binaries! Unless you are a computer, beep boop, in which case I\u2019ll allow it! Are you? \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": -25.0, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_start_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_start_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_start_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_start_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_start_1", 
            "properties": {
                "input": "{{widgets.dream_start_1.Digits}}", 
                "offset": {
                    "y": 125.0, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_start_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_start_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_start_2", 
            "properties": {
                "say": "Insomniacs regularly under-estimate the amount of sleep they are getting, because in the lighter stages of sleep, you might think you are awake. You blink your eyes, and suddenly a few hours pass. Like a time warp. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 350.0, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_start_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_start_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_start_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_start_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_start_2", 
            "properties": {
                "input": "{{widgets.dream_start_2.Digits}}", 
                "offset": {
                    "y": 500.0, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_start_3"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_start_3"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_start_3", 
            "properties": {
                "say": "Being in a coma is also not a binary. People in comas may appear to be awake. May move. May blink their eyes. \n\n Which is why the Glasgow Coma Scale exists, to answer the important existential question, \u201cexactly how much of a coma are you in\u201d because the answer matters in terms of making heart-wrenching decisions about the sort of care you\u2019ll receive, or not. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 725.0, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_start_3.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_start_3.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_start_3"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_start_3", 
            "properties": {
                "input": "{{widgets.dream_start_3.Digits}}", 
                "offset": {
                    "y": 875.0, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_choice", 
            "properties": {
                "say": "We need to figure out your non-standard care. Press 1 if you think you might be in a coma. Press 2 if you think you might be asleep. Press 3 if you think you might be in a K-Hole. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dream_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_sleep"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dream_choice.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_choice", 
            "properties": {
                "input": "{{widgets.dream_choice.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_coma_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_coma_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_coma_0", 
            "properties": {
                "say": "Flinching in response to physical pain is one way to know you\u2019re alive and alert. The Glasgow Coma Scale factors this into their testing criteria. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000.0, 
                    "x": -3300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_coma_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_coma_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_coma_0", 
            "properties": {
                "input": "{{widgets.dream_coma_0.Digits}}", 
                "offset": {
                    "y": 2150.0, 
                    "x": -3300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_coma_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_coma_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_coma_1", 
            "properties": {
                "say": "Grab a friend from your pod. Ask them to slap you in the face, lightly. \n\n If they\u2019re not comfortable doing that, ask them why they are such a wuss. Tell them you always hurt the ones you love the most. \n\n Okay fine, tell them to squeeze your hand a little too hard instead. Press 1 after you have done this. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": -3300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_coma_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_coma_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_coma_1", 
            "properties": {
                "input": "{{widgets.dream_coma_1.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": -3300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_coma_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_coma_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_coma_2", 
            "properties": {
                "say": "On the pain scale of infatuation to lizard, how much did that hurt? Please use the exact number between 1 and 8. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": -3300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 4", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": "4"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 5", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": "5"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 6", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": "6"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 7", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": "7"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 8", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": "8"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_coma_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_coma_2", 
            "properties": {
                "input": "{{widgets.dream_coma_2.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": -3300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_coma_3"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_coma_3"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_coma_3", 
            "properties": {
                "say": "Congratulations, you are probably not in a coma. God dammit Jim, I\u2019m an artist not a doctor. If you are still unsure about reality, press 1. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": -3300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_coma_3.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_coma_3.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_coma_3"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_coma_3", 
            "properties": {
                "input": "{{widgets.dream_coma_3.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": -3300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_sleep"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_sleep"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_sleep", 
            "properties": {
                "say": "The first thing to check: are you wearing pants? If not, you might be dreaming or you might be on a videoconference. But the good news is, the adrenaline spike of realizing that nobody cares regardless will probably be enough to wake you up. Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_sleep.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_sleep_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_sleep.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_sleep"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_sleep", 
            "properties": {
                "input": "{{widgets.dream_sleep.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_sleep_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_sleep_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_sleep_1", 
            "properties": {
                "say": "Look around you. Do you see any walruses? Specifically, we\u2019re looking for the Ambien Walrus. The Ambien Walrus has some ideas about how you should be spending your time. If you see the Ambien Walrus, press 1 1 to text your ex. Press 2 to lose your car keys. Press 3 to eat all the cookies. If you don\u2019t see the Ambien Walrus, look around again, and then press 4. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_sleep_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_walrus_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dream_sleep_1.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_walrus_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dream_sleep_1.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_walrus_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 4", 
                            "arguments": [
                                "{{widgets.dream_sleep_1.Digits}}"
                            ], 
                            "value": "4"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_narrative_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_sleep_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_sleep_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_sleep_1", 
            "properties": {
                "input": "{{widgets.dream_sleep_1.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_walrus_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_walrus_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_walrus_1", 
            "properties": {
                "say": "DO NOT listen to the ambien walrus. If you see the Ambien Walrus, you are asleep, even if you don\u2019t think so. do not pass go. Do not collect $200. Don\u2019t do it. Lie down in a safe place. Take a deep breath. Look at the sky. This too shall pass. Press 1 to continue \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": -2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_walrus_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_walrus_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_walrus_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_walrus_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_walrus_1", 
            "properties": {
                "input": "{{widgets.dream_walrus_1.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "dream_walrus_2", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/m2.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 3200, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_narrative_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_narrative_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_narrative_0", 
            "properties": {
                "say": "The thing about dreams is that they have a non-linear narrative structure. \n\n\n You\u2019re in a magenta race car, speeding towards the geometric sunset with your stolen nanobots. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800.0, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_narrative_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_narrative_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_narrative_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_narrative_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_narrative_0", 
            "properties": {
                "input": "{{widgets.dream_narrative_0.Digits}}", 
                "offset": {
                    "y": 2950.0, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_narrative_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_narrative_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_narrative_1", 
            "properties": {
                "say": "Then suddenly and without warning, you\u2019re on a surfboard, trying in vain to escape a blue screen of death, while a cyan seahorse giggles at you. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3175.0, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_narrative_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_narrative_q"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_narrative_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_narrative_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_narrative_1", 
            "properties": {
                "input": "{{widgets.dream_narrative_1.Digits}}", 
                "offset": {
                    "y": 3325.0, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "dream_narrative_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_narrative_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_narrative_q", 
            "properties": {
                "say": "Think about your future. The narrative arc that brought you here. What did you want to get out of this experience? Each person in the group, tell each other your answer. Don\u2019t worry, I\u2019ll wait.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4000, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_narrative_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_narrative_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_narrative_end", 
            "properties": {
                "say": "If you can imagine each step in your day, in your week, that brought you here, you probably aren\u2019t dreaming. Although, every day I see a headline that makes me ask myself what\u2019s real. If you see an ambien walrus, press 1.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4400, 
                    "x": -3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_narrative_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_walrus_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.dream_narrative_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_narrative_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_narrative_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_narrative_end", 
            "properties": {
                "input": "{{widgets.dream_narrative_end.Digits}}", 
                "offset": {
                    "y": 4550, 
                    "x": -3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "dream_hole_speech_0"
                }
            ], 
            "type": "say-play", 
            "name": "dream_hole", 
            "properties": {
                "play": "https://crimson-kangaroo-7755.twil.io/assets/k-hole-sound.wav", 
                "loop": 1, 
                "offset": {
                    "y": 2000, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_hole_speech_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_hole_speech_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_hole_speech_0", 
            "properties": {
                "say": "The K-Hole experience is deeply personal and varies a lot. However, one thing they all seem to share is the sensation of falling. Not falling physically, but visually. If you feel like you\u2019re a comet, your tail undulating behind you, you may be in a K-Hole.  \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400.0, 
                    "x": -2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_hole_speech_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_speech_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_hole_speech_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_speech_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_hole_speech_0", 
            "properties": {
                "input": "{{widgets.dream_hole_speech_0.Digits}}", 
                "offset": {
                    "y": 2550.0, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_hole_speech_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_hole_speech_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_hole_speech_1", 
            "properties": {
                "say": "Note: Comets are really big. Your tail could be up to 1 million kilometers long. No, I\u2019m not going to translate that into miles, because in this K-Hole we believe in the metric system. Anyway. Feel how expansive you are. You could almost touch the stars, with your butt, if you relax the boundary between what is you and what is not you. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2775.0, 
                    "x": -2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_hole_speech_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_speech_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_hole_speech_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_speech_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_hole_speech_1", 
            "properties": {
                "input": "{{widgets.dream_hole_speech_1.Digits}}", 
                "offset": {
                    "y": 2925.0, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_hole_speech_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_hole_speech_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_hole_speech_2", 
            "properties": {
                "say": "As you wiggle through the space/time continuum, which could be any color but let\u2019s say is dark purple, you are seeing memories, sounds, shapes. VHS tapes. John Lilly riding a dolphin. Anything that comes in to your relaxed mind. If you can imagine it, you can manifest it in front of you. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3150.0, 
                    "x": -2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_hole_speech_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_speech_3"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_hole_speech_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_speech_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_hole_speech_2", 
            "properties": {
                "input": "{{widgets.dream_hole_speech_2.Digits}}", 
                "offset": {
                    "y": 3300.0, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_hole_speech_3"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_hole_speech_3"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_hole_speech_3", 
            "properties": {
                "say": "If you made it this far, let\u2019s reconnect with the physical world. Take your traveling companions. Decide who is the leader. Make a \u201ccomet\u201d formation behind the leader. Walk slowly through the space you are in, keeping in physical contact with one another.  \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3525.0, 
                    "x": -2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_hole_speech_3.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_noise"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_hole_speech_3.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_speech_3"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_hole_speech_3", 
            "properties": {
                "input": "{{widgets.dream_hole_speech_3.Digits}}", 
                "offset": {
                    "y": 3675.0, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "dream_hole_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_hole_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_hole_noise", 
            "properties": {
                "say": "In space, there is no noise, but make the kind of noise you would imagine a comet would make, and make them. I'll wait.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 5200, 
                    "x": -2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dream_hole_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dream_hole_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dream_hole_end", 
            "properties": {
                "say": "Be careful, even in a K-Hole the cars are real. If you are in another kind of reality hole, press 1.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 5600, 
                    "x": -2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dream_hole_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.dream_hole_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dream_hole_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dream_hole_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dream_hole_end", 
            "properties": {
                "input": "{{widgets.dream_hole_end.Digits}}", 
                "offset": {
                    "y": 5750, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dystopia_start"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dystopia_start"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dystopia_start", 
            "properties": {
                "say": "What are the aspects of a dystopian timeline you are the most satisfied with? For \u201cConcentration of wealth and power in the hands of the Jeff Bezos\u201d press 1. For \u201cUpcoming annihilation of all human and also non-human life on this planet\u201d press 2. For the \u201cCampaign to defund gender\u201d, press 3 \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 0, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dystopia_start.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_wealth"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dystopia_start.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dystopia_start.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_gender"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dystopia_start.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_start"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dystopia_start", 
            "properties": {
                "input": "{{widgets.dystopia_start.Digits}}", 
                "offset": {
                    "y": 150, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dystopia_wealth"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dystopia_wealth"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dystopia_wealth", 
            "properties": {
                "say": "I am sorry. This is a dystopia. That means that it is bad. The thing you like is terrible. \n\n To reconsider your choices, ponder. Then, press 1 to change the accelerating concentration of money in the hands of the wealthy. There are no other options. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 400, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dystopia_wealth.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_wealth_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dystopia_wealth.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_wealth"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dystopia_wealth", 
            "properties": {
                "input": "{{widgets.dystopia_wealth.Digits}}", 
                "offset": {
                    "y": 550, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dystopia_wealth_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dystopia_wealth_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dystopia_wealth_1", 
            "properties": {
                "say": "To fight back with the oligarchy of art and love, press 1. To read the Necronomicon of taxes, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 400, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dystopia_wealth_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_disco_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dystopia_wealth_1.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_taxes"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dystopia_wealth_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_wealth_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dystopia_wealth_1", 
            "properties": {
                "input": "{{widgets.dystopia_wealth_1.Digits}}", 
                "offset": {
                    "y": 550, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dystopia_disco_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dystopia_disco_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dystopia_disco_0", 
            "properties": {
                "say": "Disco was born amid the backlash to the idealism of 1960s.  Nixon. Watergate. Worsening inequality. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800.0, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dystopia_disco_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_disco_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dystopia_disco_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_disco_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dystopia_disco_0", 
            "properties": {
                "input": "{{widgets.dystopia_disco_0.Digits}}", 
                "offset": {
                    "y": 950.0, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dystopia_disco_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dystopia_disco_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dystopia_disco_1", 
            "properties": {
                "say": "Disco was the music of queer people. It was the music of people of color. It was a dance floor where everyone was equal. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1175.0, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dystopia_disco_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dystopia_disco_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_disco_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dystopia_disco_1", 
            "properties": {
                "input": "{{widgets.dystopia_disco_1.Digits}}", 
                "offset": {
                    "y": 1325.0, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_choice", 
            "properties": {
                "say": "To hate on the haters, press 1. If you love yourself, press 2. To tell the DJ to shut the fuck up and play something, press 3. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.disco_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.disco_choice.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_dj"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_choice", 
            "properties": {
                "input": "{{widgets.disco_choice.Digits}}", 
                "offset": {
                    "y": 1350, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_hate_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_hate_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_hate_0", 
            "properties": {
                "say": "Lots of people hated disco in 1970s.  Old white radio hosts threw public burnings of disco records in crowded stadiums that were located in minority neighborhoods.  Anti-disco clubs that would pelt YMCA fans with marshmallows. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600.0, 
                    "x": -2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_hate_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_hate_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_hate_0", 
            "properties": {
                "input": "{{widgets.disco_hate_0.Digits}}", 
                "offset": {
                    "y": 1750.0, 
                    "x": -2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_hate_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_hate_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_hate_1", 
            "properties": {
                "say": "The backlash to Disco was homophobic and racist. More importantly, it wasn't even organic. Most of the hate clubs were secretly sponsored by radio stations. By tying people's identity with music, they could sell more advertisements. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1975.0, 
                    "x": -2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_hate_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_hate_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_hate_1", 
            "properties": {
                "input": "{{widgets.disco_hate_1.Digits}}", 
                "offset": {
                    "y": 2125.0, 
                    "x": -2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_hate_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_hate_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_hate_2", 
            "properties": {
                "say": "The backlash to disco was so severe, that we still remember to make fun of it. White supremacy was profitable in 1970s. It is profitable now. It always was. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2350.0, 
                    "x": -2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_hate_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_songs"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_hate_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_hate_2", 
            "properties": {
                "input": "{{widgets.disco_hate_2.Digits}}", 
                "offset": {
                    "y": 2500.0, 
                    "x": -2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_hate_songs"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_hate_songs"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_hate_songs", 
            "properties": {
                "say": "For actual commercialism, press 1. For fake commercialism, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": -2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_hate_songs.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_space"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.disco_hate_songs.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_tables"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_hate_songs.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_songs"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_hate_songs", 
            "properties": {
                "input": "{{widgets.disco_hate_songs.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": -2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "disco_hate_options"
                }
            ], 
            "type": "say-play", 
            "name": "disco_hate_space", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/dh1.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2400, 
                    "x": -2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "disco_hate_options"
                }
            ], 
            "type": "say-play", 
            "name": "disco_hate_tables", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/dh2.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2400, 
                    "x": -2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_hate_options"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_hate_options"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_hate_options", 
            "properties": {
                "say": "To listen to the other option, press 1. To learn more about disco music, press 2. To try something else, press 3. To choose another dystopia, press 4.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": -2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_hate_options.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_songs"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.disco_hate_options.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.disco_hate_options.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_wealth_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 4", 
                            "arguments": [
                                "{{widgets.disco_hate_options.Digits}}"
                            ], 
                            "value": "4"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.disco_hate_options.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_hate_options.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_hate_options"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_hate_options", 
            "properties": {
                "input": "{{widgets.disco_hate_options.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": -2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_love_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_love_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_love_0", 
            "properties": {
                "say": "Queer people still the music. It is the 21st century. We still talk about joy. We still steal our moments of happiness and revel in the freedoms we have.  \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600.0, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_love_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_love_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_love_0", 
            "properties": {
                "input": "{{widgets.disco_love_0.Digits}}", 
                "offset": {
                    "y": 1750.0, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_love_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_love_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_love_1", 
            "properties": {
                "say": "Disco never died. For example, ouse music emerged a Chicago club called the Warehouse, in existence from 1977 to 1983. Those DJs began in the disco scene.   \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1975.0, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_love_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_songs"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_love_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_love_1", 
            "properties": {
                "input": "{{widgets.disco_love_1.Digits}}", 
                "offset": {
                    "y": 2125.0, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_love_songs"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_love_songs"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_love_songs", 
            "properties": {
                "say": "Disco never died. Neither did the joy of quer people, or people of color. Through music, oppressed people continue to embrace their sexuality. For the hot stuff of 1970s press 1. For the WAP press 2 \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_love_songs.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_1970s"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.disco_love_songs.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_2020"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_love_songs.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_songs"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_love_songs", 
            "properties": {
                "input": "{{widgets.disco_love_songs.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "disco_love_options"
                }
            ], 
            "type": "say-play", 
            "name": "disco_love_1970s", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/dl3.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2400, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "disco_love_options"
                }
            ], 
            "type": "say-play", 
            "name": "disco_love_2020", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/dl2.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2400, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_love_options"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_love_options"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_love_options", 
            "properties": {
                "say": "To listen to the other option, press 1. To learn more about disco music, press 2. To try something else, press 3. To choose another dystopia, press 4.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": -2100
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_love_options.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_songs"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.disco_love_options.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.disco_love_options.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_wealth_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 4", 
                            "arguments": [
                                "{{widgets.disco_love_options.Digits}}"
                            ], 
                            "value": "4"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.disco_love_options.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_love_options.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_love_options"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_love_options", 
            "properties": {
                "input": "{{widgets.disco_love_options.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": -2100
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "disco_dj"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_disco_dj"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "disco_dj", 
            "properties": {
                "say": " \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": -1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.disco_dj.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_grammy"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.disco_dj.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "disco_dj"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_disco_dj", 
            "properties": {
                "input": "{{widgets.disco_dj.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "disco_grammy", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/d1.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2000, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dystopia_taxes"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dystopia_taxes"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dystopia_taxes", 
            "properties": {
                "say": "You are reading the Taxonomicon. The skull appendix cannot be read in English. To try Latin, press 1. To try Esperanto, press 2. To try objective linearity, press 3. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": -1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dystopia_taxes.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_latin_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dystopia_taxes.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_esperanto_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dystopia_taxes.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_linear_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dystopia_taxes.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_taxes"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dystopia_taxes", 
            "properties": {
                "input": "{{widgets.dystopia_taxes.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_latin_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_latin_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_latin_0", 
            "properties": {
                "say": "Comitatus est autem plena cash valorem et realis proprietas aestimatione assessores, ut ostensum est in 1975-76 in libellum tributum plena cash valorem, et postmodum in aestimationem consecuturum, cum ipsa res constabant, cedificati vel mutationem in rerum inciderunt, post MCMLXXV taxationem emendare. Omnia diiudicare iam ad rem veram licet gradibus reassessed 1975-76 census aestimatione considerare \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200.0, 
                    "x": -1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_latin_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_femur"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_latin_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_latin_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_latin_0", 
            "properties": {
                "input": "{{widgets.taxes_latin_0.Digits}}", 
                "offset": {
                    "y": 1350.0, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_esperanto_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_esperanto_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_esperanto_0", 
            "properties": {
                "say": "La plena mona valoro signifas la taksadon de nemovebla\u0135oj de la guberniaj taksistoj, kiel montrite en la imposto-fakturo 1975-76 sub plena mona valoro, a\u016d poste, la taksita valoro de nemovebla\u0135oj a\u0109etita, nove konstruita a\u016d \u015dan\u011do de proprieto okazis. post la 1975-takso. \u0108iuj nemovebla\u0135oj ne jam taksitaj \u011dis la impostoj de 1975-76 povas esti retaksitaj por reflekti tiun taksadon \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200.0, 
                    "x": -1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_esperanto_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_femur"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_esperanto_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_esperanto_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_esperanto_0", 
            "properties": {
                "input": "{{widgets.taxes_esperanto_0.Digits}}", 
                "offset": {
                    "y": 1350.0, 
                    "x": -1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_linear_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_linear_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_linear_0", 
            "properties": {
                "say": "1975 1975-76 1975-76 All Assessors County The a after already appraised as assessed assessment. be bill cash cash change constructed, or full has in levels may means not occurred of of on or ownership property property property purchased, real real real reassessed reflect shown tax tax that the the the the thereafter to to under up valuation valuation.,the value value value, newly when full \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200.0, 
                    "x": -1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_linear_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_femur"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_linear_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_linear_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_linear_0", 
            "properties": {
                "input": "{{widgets.taxes_linear_0.Digits}}", 
                "offset": {
                    "y": 1350.0, 
                    "x": -1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_femur"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_femur"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_femur", 
            "properties": {
                "say": "The Femur Appendix yields to your touch. To avoid spoilers, press 1. To sound like an ancient Roman cop, press 2. To read simply, press 3. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": -1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_femur.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_rot13_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.taxes_femur.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_piglatin_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.taxes_femur.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_common_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_femur.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_femur"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_femur", 
            "properties": {
                "input": "{{widgets.taxes_femur.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_rot13_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_rot13_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_rot13_0", 
            "properties": {
                "say": "Gur orggre gb frpher naq crecrghngr zhghny sevraqfuvc naq vagrepbhefr nzbat gur crbcyr bs gur qvssrerag fgngrf va guvf havba, gur serr vaunovgnagf bs rnpu bs gurfr fgngrf, cnhcref, intnobaqf naq shtvgvirf sebz Whfgvpr rkprcgrq, funyy or ragvgyrq gb nyy cevivyrtrf naq vzzhavgvrf bs serr pvgvmraf va gur frireny fgngrf \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000.0, 
                    "x": -1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_rot13_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_sterno_clavicular"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_rot13_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_rot13_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_rot13_0", 
            "properties": {
                "input": "{{widgets.taxes_rot13_0.Digits}}", 
                "offset": {
                    "y": 2150.0, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_piglatin_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_piglatin_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_piglatin_0", 
            "properties": {
                "say": "ethay etterbay otay ecuresay andyay erpetuatepay utualmay iendshipfray andyay intercourseyay amongyay ethay eoplepay ofyay ethay ifferentday atesstay inyay isthay unionyay , ethay eefray inhabitantsyay ofyay eachyay ofyay esethay atesstay , auperspay , agabondsvay andyay ugitivesfay omfray usticejay exceptedyay , allshay ebay entitledyay otay allyay ivilegespray andyay immunitiesyay ofyay eefray itizenscay inyay ethay everalsay states \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000.0, 
                    "x": -1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_piglatin_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_sterno_clavicular"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_piglatin_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_piglatin_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_piglatin_0", 
            "properties": {
                "input": "{{widgets.taxes_piglatin_0.Digits}}", 
                "offset": {
                    "y": 2150.0, 
                    "x": -1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_common_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_common_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_common_0", 
            "properties": {
                "say": "Thuh better to get and keep in memory common (to 2 or more) friendship and relations among thuh persons in general of thuh different states in like, ya know, this comin' together part, mostly thuh free inhabitants of each of these states, like persons supported by others livin' near-by, man persons with no fixed livin' place and persons in flight from bein' just but for, like, wow shall be given thuh right to all privileges and powers against danger of free citizens in thuh several states; and thuh persons in general of each state shall have free ingress and go back to and from any other state, mostly and shall have special rights like, there in all thuh privileges of trade and business \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000.0, 
                    "x": -1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_common_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_sterno_clavicular"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_common_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_common_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_common_0", 
            "properties": {
                "input": "{{widgets.taxes_common_0.Digits}}", 
                "offset": {
                    "y": 2150.0, 
                    "x": -1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_sterno_clavicular"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_sterno_clavicular"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_sterno_clavicular", 
            "properties": {
                "say": "Some solutions are engraved in the anterior Sterno-clavicular. To work on dismantling property, press 1. To consider voting rights, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": -1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_sterno_clavicular.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_property"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.taxes_sterno_clavicular.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_voting"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_sterno_clavicular.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_sterno_clavicular"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_sterno_clavicular", 
            "properties": {
                "input": "{{widgets.taxes_sterno_clavicular.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_property"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_property"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_property", 
            "properties": {
                "say": "The first text was an excerpt from the infamous Proposition 13, which freezes California\u2019s ability to tax property. There are two measures on the CA ballot this November that will allow more property to be taxed at its real value. Avoiding paying property taxes has allowed many billionaires to continue accumulating wealth and with it, power beyond the scope of California. \n\n Sometimes, voting is harm reduction. What is happenning locally where you are? \n\n  To come to another conclusion, press 1. To fight Jeff Bezos through other means, press 2. To choose another dystopia, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": -1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_property.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_sterno_clavicular"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.taxes_property.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_wealth_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.taxes_property.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.taxes_property.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_property.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_property"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_property", 
            "properties": {
                "input": "{{widgets.taxes_property.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": -1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "taxes_voting"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_taxes_voting"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "taxes_voting", 
            "properties": {
                "say": "The second text is from the Articles of Confederation, the precursor to the Constitution. It proceeds to enumerate groups that do not have protection under law. In November 2020, California will vote on allowing parolees to vote. \n\n Sometimes, voting is harm reduction. What is happening locally where you are? \n\n To come to another conclusion, press 1. To fight Jeff Bezos through other means, press 2. To choose another dystopia, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": -1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.taxes_voting.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_sterno_clavicular"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.taxes_voting.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_wealth_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.taxes_voting.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.taxes_voting.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.taxes_voting.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "taxes_voting"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_taxes_voting", 
            "properties": {
                "input": "{{widgets.taxes_voting.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": -1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dystopia_animal"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dystopia_animal"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dystopia_animal", 
            "properties": {
                "say": "Just because you want to disregard all other systems of life on the planet on which we live, does not mean that you get to do that. Someone is going to fix this. Will it be you? Then you must transform. If you could be a dolphin, a t-rex, or a raccoon, what would you choose? Press 1 for dolphin. Press 2 for t-rex. Press 3 for raccoon. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 400, 
                    "x": -900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dystopia_animal.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dystopia_animal.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dystopia_animal.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dystopia_animal.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dystopia_animal", 
            "properties": {
                "input": "{{widgets.dystopia_animal.Digits}}", 
                "offset": {
                    "y": 550, 
                    "x": -900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_start"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_start"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_start", 
            "properties": {
                "say": "You are bobbling in the waves, happily chittering to your pod. You see a plastic water bottle in the ocean. It is poison. What do you do?  Press 1 to telepathically scold the human who did this. Press 2 to demand structural change from your representatives. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": -900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_start.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dolphin_start.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_start.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_start"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_start", 
            "properties": {
                "input": "{{widgets.dolphin_start.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": -900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_scold_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_scold_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_scold_0", 
            "properties": {
                "say": "Did you know that as a dolphin you can translate your thoughts into any human language? \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200.0, 
                    "x": -900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_scold_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_scold_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_scold_0", 
            "properties": {
                "input": "{{widgets.dolphin_scold_0.Digits}}", 
                "offset": {
                    "y": 1350.0, 
                    "x": -900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_scold_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_scold_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_scold_1", 
            "properties": {
                "say": "With your mind, you locate the human. They live in San Francisco. Their head hurts. Their mouth is dry. It isn\u2019t deadly virus, it is just a hangover. The Baker Beach was lovely last night. The moon was full and they partied so hard. They stopped for a water bottle at a local bodega. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1575.0, 
                    "x": -900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_scold_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_scold_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_scold_1", 
            "properties": {
                "input": "{{widgets.dolphin_scold_1.Digits}}", 
                "offset": {
                    "y": 1725.0, 
                    "x": -900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_scold_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_scold_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_scold_choice", 
            "properties": {
                "say": "'Fuck you, I was thirsty!' they shout at you through the pain, 'What was I supposed to do?' \n\n Press 1 to escalate the conflict. Press 2 to de-escalate the conflict. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": -900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_scold_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_escalate"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dolphin_scold_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_deescalate_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_scold_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_scold_choice", 
            "properties": {
                "input": "{{widgets.dolphin_scold_choice.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": -900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_scold_escalate"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_scold_escalate"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_scold_escalate", 
            "properties": {
                "say": "You fill the human\u2019s skull with high pitched dolphin noise. They shriek in agony. They apologize. They say they\u2019ll never again forget their BPA-free nalgene bottle during a night out. They\u2019ll never use another disposable bottle again. Something, anything, to make it stop. You won by force. Was it worth it? To try deescalating, press 1. To try appealing to your representatives, press 2. To choose a different animal, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": -900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_scold_escalate.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dolphin_scold_escalate.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dolphin_scold_escalate.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.dolphin_scold_escalate.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_scold_escalate.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_escalate"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_scold_escalate", 
            "properties": {
                "input": "{{widgets.dolphin_scold_escalate.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": -900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_scold_deescalate_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_scold_deescalate_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_scold_deescalate_0", 
            "properties": {
                "say": "You tell the human you\u2019re sorry for coming on too strong. Since you live in the water all the time, you have no idea what it\u2019s it\u2019s like to be so dry. The human apologizes. You promise to mail the human some dolphin stickers for their BPA-free, reusable nalgene bottle. You didn\u2019t need a party invite, but now you have one... \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400.0, 
                    "x": -600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_scold_deescalate_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_deescalate_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_scold_deescalate_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_deescalate_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_scold_deescalate_0", 
            "properties": {
                "input": "{{widgets.dolphin_scold_deescalate_0.Digits}}", 
                "offset": {
                    "y": 2550.0, 
                    "x": -600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_scold_deescalate_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_scold_deescalate_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_scold_deescalate_end", 
            "properties": {
                "say": "It hurts to be nice to someone who poisoned your home. Was it worth it? \n\n  To try escalating, press 1. To try appealing to your representatives, press 2. To choose a different animal, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3200, 
                    "x": -600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_scold_deescalate_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dolphin_scold_deescalate_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dolphin_scold_deescalate_end.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.dolphin_scold_deescalate_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_scold_deescalate_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_scold_deescalate_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_scold_deescalate_end", 
            "properties": {
                "input": "{{widgets.dolphin_scold_deescalate_end.Digits}}", 
                "offset": {
                    "y": 3350, 
                    "x": -600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_0", 
            "properties": {
                "say": "Did you know that dolphins live in a socialist society? There is conflict, of course. Who is going to clean the barnacles? Should you provide mutual aid to the jellyfish?  Should the minutes be bubbled to the surface, or pinned to the seaweed? What if we had, like, a rotation for this barnacle, I am not saying that it is a problem, but  maybe the jellyfish could contribute? Their inaction just stings. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200.0, 
                    "x": -1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_0", 
            "properties": {
                "input": "{{widgets.dolphin_gov_0.Digits}}", 
                "offset": {
                    "y": 1350.0, 
                    "x": -1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_1", 
            "properties": {
                "say": "You wave your fin and Robert floats over. Robert is in charge of keeping the rules in order. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1575.0, 
                    "x": -1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_1", 
            "properties": {
                "input": "{{widgets.dolphin_gov_1.Digits}}", 
                "offset": {
                    "y": 1725.0, 
                    "x": -1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_choice", 
            "properties": {
                "say": "You make a motion to send a dolphin on a mission to travel back in time and prevent plastic from being invented. If the motion is accepted, press 1. If the motion is stuck in committee, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": -1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_accept_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dolphin_gov_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_reject_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_choice", 
            "properties": {
                "input": "{{widgets.dolphin_gov_choice.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": -1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_accept_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_accept_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_accept_0", 
            "properties": {
                "say": "You will make the future brighter, and healthier and a little more just, at least for dolphins. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400.0, 
                    "x": -1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_accept_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_accept_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_accept_0", 
            "properties": {
                "input": "{{widgets.dolphin_gov_accept_0.Digits}}", 
                "offset": {
                    "y": 2550.0, 
                    "x": -1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_accept_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_accept_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_accept_1", 
            "properties": {
                "say": "Go bask in the waves some more. You have earned it. Rest is an important part of activist practice, and play is a form of rest. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2775.0, 
                    "x": -1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_accept_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_accept_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_accept_1", 
            "properties": {
                "input": "{{widgets.dolphin_gov_accept_1.Digits}}", 
                "offset": {
                    "y": 2925.0, 
                    "x": -1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_accept_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_accept_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_accept_end", 
            "properties": {
                "say": "To try passing a less popular motion, press 1. To try scolding the burner, press 2. To choose a different animal, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4000, 
                    "x": -1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_end.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_accept_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_accept_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_accept_end", 
            "properties": {
                "input": "{{widgets.dolphin_gov_accept_end.Digits}}", 
                "offset": {
                    "y": 4150, 
                    "x": -1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_reject_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_reject_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_reject_0", 
            "properties": {
                "say": "Fine. You will show them. You join the Technology Studies reading group. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400.0, 
                    "x": -1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_reject_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_reject_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_reject_0", 
            "properties": {
                "input": "{{widgets.dolphin_gov_reject_0.Digits}}", 
                "offset": {
                    "y": 2550.0, 
                    "x": -1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_reject_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_reject_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_reject_1", 
            "properties": {
                "say": "Eventually, your proposal about biodegradable alternatives is accepted. You will make the future brighter for everyone. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2775.0, 
                    "x": -1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_reject_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_reject_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_reject_1", 
            "properties": {
                "input": "{{widgets.dolphin_gov_reject_1.Digits}}", 
                "offset": {
                    "y": 2925.0, 
                    "x": -1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_reject_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_reject_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_reject_2", 
            "properties": {
                "say": "There is no rush in the Time Travel Committee, but eventually your trip will have happened. Your one regret is that you will always be the only one to do any of the readings.  \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3150.0, 
                    "x": -1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_reject_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_reject_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_reject_2", 
            "properties": {
                "input": "{{widgets.dolphin_gov_reject_2.Digits}}", 
                "offset": {
                    "y": 3300.0, 
                    "x": -1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dolphin_gov_reject_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dolphin_gov_reject_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dolphin_gov_reject_end", 
            "properties": {
                "say": "To try passing a more popular motion, press 1. To try scolding the burner, press 2. To choose a different animal, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4000, 
                    "x": -1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_end.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dolphin_gov_reject_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dolphin_gov_reject_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dolphin_gov_reject_end", 
            "properties": {
                "input": "{{widgets.dolphin_gov_reject_end.Digits}}", 
                "offset": {
                    "y": 4150, 
                    "x": -1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_start"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_start"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_start", 
            "properties": {
                "say": "The year is 1988. You are cruising downhill on a longboard.  You\u2019ve been bitten by a hot pink spider. Your beautiful life is rainbows and trash. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_start.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_start.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_start"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_start", 
            "properties": {
                "input": "{{widgets.raccoon_start.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_choice", 
            "properties": {
                "say": "You pass by a human male. Your spidey senses are tingling. Press 1 to jump off your skateboard and bite him. Press 2 to skate on by your merry way. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_skate"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_choice", 
            "properties": {
                "input": "{{widgets.raccoon_choice.Digits}}", 
                "offset": {
                    "y": 1350, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite", 
            "properties": {
                "say": "Wow, this human has terrible hair. You bite him, and he goes off to have some allergic reaction to the rabies vaccine. You don\u2019t even have rabies. Press 1 to spy on him in the hospital. Press 2 to go on the run from animal control. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_bite.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_escape"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite", 
            "properties": {
                "input": "{{widgets.raccoon_bite.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_spy"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_spy"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_spy", 
            "properties": {
                "say": "In the hospital, your victim, Aaron Sorkin makes die hard speeches to everyone around him. Noise cancelling headphones are hard to come by, so the nurse gives him sedatives. Press 1 to throw trash. Press 2 to scratch messages on the window. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_trash_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_scratch_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_spy", 
            "properties": {
                "input": "{{widgets.raccoon_bite_spy.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_spy_trash_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_spy_trash_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_spy_trash_0", 
            "properties": {
                "say": "An old yogurt cup hits the hospital window, just as Sorkin is about to launch into a monologue. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400.0, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_trash_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_trash_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_trash_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_trash_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_spy_trash_0", 
            "properties": {
                "input": "{{widgets.raccoon_bite_spy_trash_0.Digits}}", 
                "offset": {
                    "y": 2550.0, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_spy_trash_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_spy_trash_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_spy_trash_1", 
            "properties": {
                "say": "'I hate yogurt cups,' Aaron Sorkin screams. Then, he dedicates his life to passionate, uncompromising environmentalism. His tone policing falls by the wayside of history and he stops writing terrible female characters. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2775.0, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_trash_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_trash_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_trash_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_spy_trash_1", 
            "properties": {
                "input": "{{widgets.raccoon_bite_spy_trash_1.Digits}}", 
                "offset": {
                    "y": 2925.0, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_spy_scratch_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_spy_scratch_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_spy_scratch_0", 
            "properties": {
                "say": "'Actually, women are people,' you write on the window. It isn\u2019t perfect \u2014 you are a raccoon, not an artist, but Sorkin\u2019s eyes light up. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400.0, 
                    "x": 1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_scratch_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_scratch_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_scratch_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_scratch_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_spy_scratch_0", 
            "properties": {
                "input": "{{widgets.raccoon_bite_spy_scratch_0.Digits}}", 
                "offset": {
                    "y": 2550.0, 
                    "x": 1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_spy_scratch_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_spy_scratch_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_spy_scratch_1", 
            "properties": {
                "say": " Aaron Sorkin has an epiphany. He screams: What if instead of making shows where old white men endlessly lecture young women, I \u2014 You await the answer eagerly. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2775.0, 
                    "x": 1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_scratch_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_discuss"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_scratch_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_scratch_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_spy_scratch_1", 
            "properties": {
                "input": "{{widgets.raccoon_bite_spy_scratch_1.Digits}}", 
                "offset": {
                    "y": 2925.0, 
                    "x": 1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "raccoon_bite_spy_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_spy_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_discuss", 
            "properties": {
                "say": "What should Sorkin write instead? Discuss with your group. Then write it. We don\u2019t need to undo this world, but we must build a better one. I will wait.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3200, 
                    "x": 1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_spy_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_spy_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_spy_end", 
            "properties": {
                "say": "Your legacy lives on in the history that never was. Thank you, raccoon. To do something else in the hospital, press 1. To escape the hospital, press 2. To skate on, press 3. To try a different animal, press 4.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3600, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_end.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 4", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_end.Digits}}"
                            ], 
                            "value": "4"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_spy_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_spy_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_spy_end", 
            "properties": {
                "input": "{{widgets.raccoon_bite_spy_end.Digits}}", 
                "offset": {
                    "y": 3750, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_escape"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_escape"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_escape", 
            "properties": {
                "say": "The sky calls you. You jump into the air, screeching at the top of your lungs. Press 1 to hitch a ride with a seagull. Press 2 to spin your board like a parachute. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_escape.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_escape_gull"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_bite_escape.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_escape_parachute"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_escape.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_escape"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_escape", 
            "properties": {
                "input": "{{widgets.raccoon_bite_escape.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": 600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_escape_gull"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_escape_gull"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_escape_gull", 
            "properties": {
                "say": "Seagulls don\u2019t like hugs. 'Let go of me,' the seagull says, so you try to explain. To say that you had to change the course of history, press 1. To point at the animal control, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_escape_gull.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_history_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_bite_escape_gull.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_control_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_escape_gull.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_escape_gull"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_escape_gull", 
            "properties": {
                "input": "{{widgets.raccoon_bite_escape_gull.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": 600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_history_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_history_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_history_0", 
            "properties": {
                "say": "'I had to go bite a playwright,' you say. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800.0, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_history_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_history_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_history_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_history_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_history_0", 
            "properties": {
                "input": "{{widgets.raccoon_bite_history_0.Digits}}", 
                "offset": {
                    "y": 2950.0, 
                    "x": 600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_history_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_history_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_history_1", 
            "properties": {
                "say": "'Are his plays performed outdoors?' the seagull asks you as you cling tightly. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3175.0, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_history_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_history_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_history_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_history_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_history_1", 
            "properties": {
                "input": "{{widgets.raccoon_bite_history_1.Digits}}", 
                "offset": {
                    "y": 3325.0, 
                    "x": 600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_history_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_history_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_history_2", 
            "properties": {
                "say": "'No, you say, so the seagull drops you straight into the ocean. Luckily, you surf your way out. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3550.0, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_history_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_escape_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_history_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_history_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_history_2", 
            "properties": {
                "input": "{{widgets.raccoon_bite_history_2.Digits}}", 
                "offset": {
                    "y": 3700.0, 
                    "x": 600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_escape_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_escape_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_escape_end", 
            "properties": {
                "say": "Your legacy lives on in the history that never was. Thank you, raccoon. To do escape differently, press 1. To stay in the hospital, press 2. To skate on, press 3. To try a different animal, press 4.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4000, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_escape_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_escape"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_escape_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.raccoon_escape_end.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 4", 
                            "arguments": [
                                "{{widgets.raccoon_escape_end.Digits}}"
                            ], 
                            "value": "4"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.raccoon_escape_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_escape_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_escape_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_escape_end", 
            "properties": {
                "input": "{{widgets.raccoon_escape_end.Digits}}", 
                "offset": {
                    "y": 4150, 
                    "x": 600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_control_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_control_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_control_0", 
            "properties": {
                "say": "'They look kind of rabid,' the seagull says about animal control, 'They should get some shots.' You agree whole-heartedly. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800.0, 
                    "x": 300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_control_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_control_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_control_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_control_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_control_0", 
            "properties": {
                "input": "{{widgets.raccoon_bite_control_0.Digits}}", 
                "offset": {
                    "y": 2950.0, 
                    "x": 300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_control_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_control_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_control_1", 
            "properties": {
                "say": "As the two of you soar over the city, the seagull spies some trash worth devouring. You don\u2019t mind. Every dumpster is home to a vapor racoon. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3175.0, 
                    "x": 300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_control_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_escape_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_control_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_control_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_control_1", 
            "properties": {
                "input": "{{widgets.raccoon_bite_control_1.Digits}}", 
                "offset": {
                    "y": 3325.0, 
                    "x": 300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_bite_escape_parachute"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_bite_escape_parachute"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_bite_escape_parachute", 
            "properties": {
                "say": "You put your board in the air and start spinning. Your arms hurt. Your tiny legs hurt. You crash onto an awning of a yuppie cafe. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_bite_escape_parachute.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_cafe"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_bite_escape_parachute.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite_escape_parachute"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_bite_escape_parachute", 
            "properties": {
                "input": "{{widgets.raccoon_bite_escape_parachute.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_cafe"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_cafe"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_cafe", 
            "properties": {
                "say": "'Is that a raccoon, or worse, a raver?' someone screams. To sing a pop song, press 1. To ask for cocaine, press 2 \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_cafe.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_song"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_cafe.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_cocaine_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_cafe.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_cafe"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_cafe", 
            "properties": {
                "input": "{{widgets.raccoon_cafe.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "raccoon_song", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/pop.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 3200, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_cocaine_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_cocaine_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_cocaine_1", 
            "properties": {
                "say": "Thank god that you are just a stock broker' the waiter says. 'For some reason, I thought that you were trash.'  Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3600, 
                    "x": -300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_cocaine_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_cocaine_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_cocaine_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_cocaine_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_cocaine_1", 
            "properties": {
                "input": "{{widgets.raccoon_cocaine_1.Digits}}", 
                "offset": {
                    "y": 3750, 
                    "x": -300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "raccoon_cocaine_2", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/greed.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 4000, 
                    "x": -300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_skate"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_skate"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_skate", 
            "properties": {
                "say": "You\u2019re thinking about getting involved in something, but you\u2019re not sure what. How do you know what the most effective use of your time even is? There are so many things you could be doing. To cruise a hill press 1. To root through garbage, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_skate.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_hill"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_skate.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_trash"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_skate.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_skate"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_skate", 
            "properties": {
                "input": "{{widgets.raccoon_skate.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_hill"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_hill"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_hill", 
            "properties": {
                "say": "You crest up, just as the sun goes down. Clouds envelop you. It is paradise. Press 1 to check the timeline. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_hill.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_hill_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_hill.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_hill"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_hill", 
            "properties": {
                "input": "{{widgets.raccoon_hill.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": 1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "raccoon_skate_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_skate_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_hill_2", 
            "properties": {
                "say": "The timeline remains the same, but that tiny moment of perfection lives in your raccoon heart forever. If there are other groups of players nearby, I want you to ask them some questions. Don\u2019t worry, I\u2019ll wait. What moment would be perfect for you, right now?", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_trash"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_trash"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_trash", 
            "properties": {
                "say": "You find a half-eaten sandwich, some electronics and a used shoulder pad. What would you do with any of these? Press one to think about it and check the effect on the timeline. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_trash.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_trash_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_trash.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_trash"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_trash", 
            "properties": {
                "input": "{{widgets.raccoon_trash.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": 1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "raccoon_skate_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_skate_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_trash_2", 
            "properties": {
                "say": "he years pass, and the timeline remains the same as our current one.  It\u2019s not too late. You can\u2019t change the past, but you can always change the future. If there are other groups of players nearby, I want you to ask them some questions. Don\u2019t worry, I\u2019ll wait. If nobody else is nearby, just tell me your answers instead. What\u2019s one thing about the past you would change, if you could?", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "raccoon_skate_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_raccoon_skate_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "raccoon_skate_end", 
            "properties": {
                "say": "To go a different route, press 1. To bite him, press 2. To choose a different animal, press 3\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": 1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.raccoon_skate_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_skate"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.raccoon_skate_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_bite"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.raccoon_skate_end.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.raccoon_skate_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.raccoon_skate_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "raccoon_skate_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_raccoon_skate_end", 
            "properties": {
                "input": "{{widgets.raccoon_skate_end.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": 1200
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_start"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_start"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_start", 
            "properties": {
                "say": "You are lurking in the shadows. You see a lone triceratops. You are hungry. Yet you are also weary of this cruel, dino-eat-dino world. What do you do? Press 1 to chase after them.  Press 2 to befriend them. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_start.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_start.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_start.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_start"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_start", 
            "properties": {
                "input": "{{widgets.trex_start.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_chase"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_chase"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_chase", 
            "properties": {
                "say": "You catch the triceratops. They beg for their life. You just don\u2019t have this in you today, so you let them live. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_chase.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_chase.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_chase", 
            "properties": {
                "input": "{{widgets.trex_chase.Digits}}", 
                "offset": {
                    "y": 1350, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_chase_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_chase_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_chase_1", 
            "properties": {
                "say": "You get so hungry, that you bite into a fern. Fern is one of the oldest genres of plants, but it is surprisingly delicious, and you are surprised. To dedicate your life to plant-based carnivore alternatives, press 1. To apologize to the triceratops, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_chase_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_chase_1.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_chase_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_chase_1", 
            "properties": {
                "input": "{{widgets.trex_chase_1.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_vegan_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_vegan_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_vegan_0", 
            "properties": {
                "say": "You discover that, hey, plants can actually be pretty filling! Other T-Rexes agree with you. Every day, you feast. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000.0, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_vegan_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_vegan_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_vegan_0", 
            "properties": {
                "input": "{{widgets.trex_vegan_0.Digits}}", 
                "offset": {
                    "y": 2150.0, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_vegan_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_vegan_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_vegan_1", 
            "properties": {
                "say": "The triceratops are freed from the pressure of avoiding predators. They look to the skies. Genius dinosaur scientists see the meteor coming. It isn\u2019t even a crisis. They planned for this. Nothing of note happens to anyone. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2375.0, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_vegan_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_billions"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_vegan_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_vegan_1", 
            "properties": {
                "input": "{{widgets.trex_vegan_1.Digits}}", 
                "offset": {
                    "y": 2525.0, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_vegan_billions"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_vegan_billions"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_vegan_billions", 
            "properties": {
                "say": "Billions of years pass. You see a lone triceratops take your parking spot at the local vegan co-op. Press 1 to chase after them. Press 2 to try to befriend them. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4000, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_billions_a"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_billions_b"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_billions"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_vegan_billions", 
            "properties": {
                "input": "{{widgets.trex_vegan_billions.Digits}}", 
                "offset": {
                    "y": 4150, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_vegan_billions_a"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_vegan_billions_a"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_vegan_billions_a", 
            "properties": {
                "say": "Now everyone is angry. What a mess. You are so just, like, getting a bicycle. \n\n To chase the triceratops again, press 1. To befriend the triceratops, press 2. To choose a different animal, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4400, 
                    "x": 0
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_a.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_a.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_a.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_a.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_a.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_billions_a"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_vegan_billions_a", 
            "properties": {
                "input": "{{widgets.trex_vegan_billions_a.Digits}}", 
                "offset": {
                    "y": 4550, 
                    "x": 0
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_vegan_billions_b"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_vegan_billions_b"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_vegan_billions_b", 
            "properties": {
                "say": "The triceratops helps you carry your groceries to the car and you start chatting. Suddenly, you are so glad that you had to park so far away, and that they gave you their number. \n\n To chase the triceratops again, press 1. To befriend the triceratops, press 2. To choose a different animal, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4400, 
                    "x": -300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_b.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_b.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_b.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_b.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_vegan_billions_b.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_vegan_billions_b"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_vegan_billions_b", 
            "properties": {
                "input": "{{widgets.trex_vegan_billions_b.Digits}}", 
                "offset": {
                    "y": 4550, 
                    "x": -300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_apology_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_apology_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_apology_0", 
            "properties": {
                "say": "Being hunted for food is irritating. An earnest apology is not as good as action. \n\n You learn about different plant-based alternatives, and how to farm them. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000.0, 
                    "x": -600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_apology_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_apology_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_apology_0", 
            "properties": {
                "input": "{{widgets.trex_apology_0.Digits}}", 
                "offset": {
                    "y": 2150.0, 
                    "x": -600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_apology_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_apology_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_apology_1", 
            "properties": {
                "say": "Sustainable farms allow dinosaurs to wait out the meteor underground. Destruction befalls the planet, but your kind survives. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2375.0, 
                    "x": -600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_apology_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_billions"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_apology_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_apology_1", 
            "properties": {
                "input": "{{widgets.trex_apology_1.Digits}}", 
                "offset": {
                    "y": 2525.0, 
                    "x": -600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_apology_billions"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_apology_billions"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_apology_billions", 
            "properties": {
                "say": "Billions of years pass. On the way to the vegan co-op, you collide with a skateboarding triceratops. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4000, 
                    "x": -600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_apology_billions.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_billions_a"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_apology_billions.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_billions_b"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_apology_billions.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_billions"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_apology_billions", 
            "properties": {
                "input": "{{widgets.trex_apology_billions.Digits}}", 
                "offset": {
                    "y": 4150, 
                    "x": -600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_apology_billions_a"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_apology_billions_a"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_apology_billions_a", 
            "properties": {
                "say": "Woah! They are fast. You are so jealous! Dinosaurs on a skateboard? You are going to get one right now. \n\n To chase the triceratops again, press 1. To befriend the triceratops, press 2. To choose a different animal, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4400, 
                    "x": -600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_a.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_a.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_a.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_a.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_a.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_billions_a"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_apology_billions_a", 
            "properties": {
                "input": "{{widgets.trex_apology_billions_a.Digits}}", 
                "offset": {
                    "y": 4550, 
                    "x": -600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_apology_billions_b"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_apology_billions_b"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_apology_billions_b", 
            "properties": {
                "say": "They are just in a hurry to an ultra-cool party. There will be ferns. Do you want to come? You definitely want to come. \n\nTo chase the triceratops again, press 1. To befriend the triceratops, press 2. To choose a different animal, press 3. \n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 4400, 
                    "x": -900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_b.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_b.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_b.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_b.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_apology_billions_b.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_apology_billions_b"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_apology_billions_b", 
            "properties": {
                "input": "{{widgets.trex_apology_billions_b.Digits}}", 
                "offset": {
                    "y": 4550, 
                    "x": -900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_friend"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend", 
            "properties": {
                "say": "The triceratops is extremely skeptical that you want to be their friend. They have a point. Press 1 to not blame them. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_friend.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_friend.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_friend", 
            "properties": {
                "input": "{{widgets.trex_friend.Digits}}", 
                "offset": {
                    "y": 1350, 
                    "x": 300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_friend_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_1", 
            "properties": {
                "say": "When you sigh, and gather up some ferns as a peace offering, the triceratops is impressed. You sit in the shade and chat, while they gnaw on the ferns and talk about the Majestic Mosasaurs. If you also follow the Majestic Mosasaurs, press 1. If you don\u2019t know the rules, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_friend_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_a"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_friend_1.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_b_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_friend_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_friend_1", 
            "properties": {
                "input": "{{widgets.trex_friend_1.Digits}}", 
                "offset": {
                    "y": 1750, 
                    "x": 300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_a"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_friend_a"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_a", 
            "properties": {
                "say": "The triceratops\u2019s name is Topsy.  You start watching the games together.  Soon, you want so much more. To finally confess your crush, press 1. To wait, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_friend_a.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_a_confess"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_friend_a.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_a_wait"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_friend_a.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_a"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_friend_a", 
            "properties": {
                "input": "{{widgets.trex_friend_a.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": 300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_a_confess", 
            "properties": {
                "say": "You gather up your courage, but you just blurt it out one day but it is ok they kiss you back and it is all salt and flowers and you never want to let go.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "trex_friend_a_wait_1"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_a_wait_1"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_a_wait", 
            "properties": {
                "say": "To wait, stay on the line.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_a_wait_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_friend_a_wait_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_a_wait_1", 
            "properties": {
                "say": "To wait, press 1 \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_friend_a_wait_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_a_wait_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_friend_a_wait_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_a_wait_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_friend_a_wait_1", 
            "properties": {
                "input": "{{widgets.trex_friend_a_wait_1.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": 600
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_a_wait_end", 
            "properties": {
                "say": "You feel like a coward when they tell you first, and Topsy doesn\u2019t care if this is weird, and you don\u2019t either and you go see a Majestic Mosasaurs match together, and if anyone has problems with this, well, you\u2019ve got really big teeth.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3200, 
                    "x": 600
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_b_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_friend_b_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_b_0", 
            "properties": {
                "say": "The triceratops\u2019s name is Topsy, and they used to compete back in the day. \n\n Knowledge is power. Sometimes, the transfer of that knowledge is an act of love. \n\n You begin to follow sports together. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000.0, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_friend_b_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_b_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_friend_b_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_b_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_friend_b_0", 
            "properties": {
                "input": "{{widgets.trex_friend_b_0.Digits}}", 
                "offset": {
                    "y": 2150.0, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_b_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_friend_b_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_b_1", 
            "properties": {
                "say": "You spend many hours, side by side, revelling in your new-found interest. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2375.0, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_friend_b_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_b_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_friend_b_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_b_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_friend_b_1", 
            "properties": {
                "input": "{{widgets.trex_friend_b_1.Digits}}", 
                "offset": {
                    "y": 2525.0, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_b_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_friend_b_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_b_choice", 
            "properties": {
                "say": "To strategically confess your crush press 1. To just blurt it out, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_friend_b_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_b_confess"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_friend_b_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_b_blurt"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_friend_b_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_b_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_friend_b_choice", 
            "properties": {
                "input": "{{widgets.trex_friend_b_choice.Digits}}", 
                "offset": {
                    "y": 2550, 
                    "x": 900
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_b_confess", 
            "properties": {
                "say": "For their birthday, you get them tickets to the Majestic Mosasaurs match. Have they ever been happier? You are watching them when they suddenly blurt out that they are falling in love with you.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": 900
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_b_blurt", 
            "properties": {
                "say": "'Well,' Topsy says, 'so do I' and even though it isn\u2019t dramatic, you melt inside, just a little bit more, and together, the two of you remake the world.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": 1200
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "trex_friend_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_trex_friend_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "trex_friend_end", 
            "properties": {
                "say": "To befriend the triceratops again, press 1. To give chase, press 2. To choose a different animal, press 3. \n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3200, 
                    "x": 300
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.trex_friend_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.trex_friend_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_chase"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.trex_friend_end.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_animal"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.trex_friend_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.trex_friend_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "trex_friend_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_trex_friend_end", 
            "properties": {
                "input": "{{widgets.trex_friend_end.Digits}}", 
                "offset": {
                    "y": 3350, 
                    "x": 300
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "dystopia_gender"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_dystopia_gender"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "dystopia_gender", 
            "properties": {
                "say": "This one is a good thing, so we will not send our army of health goth pigeons after you. Welcome to the party. To call into the upcoming public comment session, press 1. To organize a protest march, press 2. To go outside of state power, press 3. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 400, 
                    "x": 2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.dystopia_gender.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.dystopia_gender.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_protest"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.dystopia_gender.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_anarchy_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.dystopia_gender.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_gender"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_dystopia_gender", 
            "properties": {
                "input": "{{widgets.dystopia_gender.Digits}}", 
                "offset": {
                    "y": 550, 
                    "x": 2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_comment"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_comment"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_comment", 
            "properties": {
                "say": "Welcome to the public comment meeting. Press 1 to raise your hand. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": 1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_comment.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_comment.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_comment", 
            "properties": {
                "input": "{{widgets.gender_comment.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": 1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_comment_2"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_comment_2"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_comment_2", 
            "properties": {
                "say": "Public comment will start at 16AM and go on until dawn. You have pi+i minutes to comment. For rational talking points, press 1. For real talking points, press 2. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_comment_2.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_rational_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.gender_comment_2.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_real_0"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_comment_2.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_2"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_comment_2", 
            "properties": {
                "input": "{{widgets.gender_comment_2.Digits}}", 
                "offset": {
                    "y": 1350, 
                    "x": 1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_comment_rational_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_comment_rational_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_comment_rational_0", 
            "properties": {
                "say": "Years of effort to reform gender have failed. \n\n Strict adherence to binary gender is no longer serving our communities. \n\n Our time, glitter, and hormones are better spent on literally anything else. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600.0, 
                    "x": 1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_comment_rational_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_rational_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_comment_rational_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_rational_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_comment_rational_0", 
            "properties": {
                "input": "{{widgets.gender_comment_rational_0.Digits}}", 
                "offset": {
                    "y": 1750.0, 
                    "x": 1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_comment_rational_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_comment_rational_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_comment_rational_1", 
            "properties": {
                "say": "These are the FACTS that you will tell your elected official when, after many years of trying, they finally win at Candy Crush. Convinced by the magic of victory, they might believe you. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1975.0, 
                    "x": 1500
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_comment_rational_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_comment_rational_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_rational_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_comment_rational_1", 
            "properties": {
                "input": "{{widgets.gender_comment_rational_1.Digits}}", 
                "offset": {
                    "y": 2125.0, 
                    "x": 1500
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_comment_real_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_comment_real_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_comment_real_0", 
            "properties": {
                "say": "Your supervisor may not be aware that essentialism is sooo second wave. \n\n Gender isn\u2019t vapor at all. \n\n Our actions determine our morals. If our elected officials do not act on your behalf, they will drown in the waves of the future. Most importantly, their careers shall absolutely NOT be mourned. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600.0, 
                    "x": 1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_comment_real_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_real_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_comment_real_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_real_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_comment_real_0", 
            "properties": {
                "input": "{{widgets.gender_comment_real_0.Digits}}", 
                "offset": {
                    "y": 1750.0, 
                    "x": 1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_comment_real_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_comment_real_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_comment_real_1", 
            "properties": {
                "say": "These are the feelings that you will tell your elected official. They are now aware of your feelings about their carreer. This will influence their vote. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1975.0, 
                    "x": 1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_comment_real_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_end"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_comment_real_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_real_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_comment_real_1", 
            "properties": {
                "input": "{{widgets.gender_comment_real_1.Digits}}", 
                "offset": {
                    "y": 2125.0, 
                    "x": 1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_comment_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_comment_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_comment_end", 
            "properties": {
                "say": "Thank you for your participation in the politican process. To try another line of argument, press 1. To find another means of defunding gender, press 2. To go to a different dystopia, press 3.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 3200, 
                    "x": 1800
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_comment_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_2"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.gender_comment_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_gender"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.gender_comment_end.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.gender_comment_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_comment_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_comment_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_comment_end", 
            "properties": {
                "input": "{{widgets.gender_comment_end.Digits}}", 
                "offset": {
                    "y": 3350, 
                    "x": 1800
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_protest"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_protest"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_protest", 
            "properties": {
                "say": "Activism is a team sport. We must all work together. Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800, 
                    "x": 2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_protest.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_protest_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_protest.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_protest"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_protest", 
            "properties": {
                "input": "{{widgets.gender_protest.Digits}}", 
                "offset": {
                    "y": 950, 
                    "x": 2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "gender_protest_2"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_protest_2"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_protest_1", 
            "properties": {
                "say": "If there are other groups of players nearby, I want you to ask them some questions. Don\u2019t worry, I\u2019ll wait. If nobody else is nearby, just tell me your answers instead. How has your relationship with your gender changed over the years?", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1200, 
                    "x": 2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "gender_protest_3"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_protest_3"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_protest_2", 
            "properties": {
                "say": "Look at the people that surround you, physically or emotionally. How much of your relationships are influenced by your respective genders, chosen or assigned? Tell your answers to me, or each other. I will wait.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1600, 
                    "x": 2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "gender_protest_4"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_protest_4"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_protest_3", 
            "properties": {
                "say": "Collective action is a convention for fans  of a better world. We will win. What will we replace gender with, if anything? How can we support change here and now? Discuss with each other. I will wait.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech", 
                    "next": "gender_protest_5"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_protest_5"
                }, 
                {
                    "event": "keypress"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_protest_4", 
            "properties": {
                "say": "Make up some chants for your protest. Make them short. Make them rhyme. Shout them. Be bold. Take this time to send them to your people or group chat. You are not alone.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2400, 
                    "x": 2400
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "return_to_main_menu"
                }
            ], 
            "type": "say-play", 
            "name": "gender_protest_5", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/lorde.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2800, 
                    "x": 2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_anarchy_0"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_anarchy_0"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_anarchy_0", 
            "properties": {
                "say": "Most people imagine gender as a binary. Male at one end, female on the other end. Nonbinary people somewhere in the middle. It confuses me how easily humans can fall into binary, polarizing, black and white thinking? \n\n What if we thought about gender as a cartesian coordinate system? A constellation? A galaxy? \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 800.0, 
                    "x": 2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_anarchy_0.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_anarchy_1"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_anarchy_0.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_anarchy_0"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_anarchy_0", 
            "properties": {
                "input": "{{widgets.gender_anarchy_0.Digits}}", 
                "offset": {
                    "y": 950.0, 
                    "x": 2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_anarchy_1"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_anarchy_1"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_anarchy_1", 
            "properties": {
                "say": "What if gender was like being a raver, or a goth? You\u2019d be expected to change and choose different flavors throughout your life. More self-expression, less oppression. \n\n Press 1 to continue. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 1175.0, 
                    "x": 2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_anarchy_1.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_anarchy_choice"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_anarchy_1.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_anarchy_1"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_anarchy_1", 
            "properties": {
                "input": "{{widgets.gender_anarchy_1.Digits}}", 
                "offset": {
                    "y": 1325.0, 
                    "x": 2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_anarchy_choice"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_anarchy_choice"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_anarchy_choice", 
            "properties": {
                "say": "If you had to choose an alternate gender, what would it be? Press 1 for witch house. Press 2 for cloud rap. Press 3 for seapunk. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2000, 
                    "x": 2700
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_anarchy_choice.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "witchhouse"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.gender_anarchy_choice.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "cloudrap"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 3", 
                            "arguments": [
                                "{{widgets.gender_anarchy_choice.Digits}}"
                            ], 
                            "value": "3"
                        }
                    ], 
                    "event": "match", 
                    "next": "seapunk"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_anarchy_choice.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_anarchy_choice"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_anarchy_choice", 
            "properties": {
                "input": "{{widgets.gender_anarchy_choice.Digits}}", 
                "offset": {
                    "y": 2150, 
                    "x": 2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "gender_anarchy_end"
                }
            ], 
            "type": "say-play", 
            "name": "witchhouse", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/witchouse.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2400, 
                    "x": 2400
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "gender_anarchy_end"
                }
            ], 
            "type": "say-play", 
            "name": "cloudrap", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/cloudrap.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2400, 
                    "x": 2700
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "audioComplete", 
                    "next": "gender_anarchy_end"
                }
            ], 
            "type": "say-play", 
            "name": "seapunk", 
            "properties": {
                "play": "https://web.mit.edu/ekate/Public/seapunk.mp3", 
                "loop": 1, 
                "offset": {
                    "y": 2400, 
                    "x": 3000
                }
            }
        }, 
        {
            "transitions": [
                {
                    "event": "speech"
                }, 
                {
                    "event": "timeout", 
                    "next": "gender_anarchy_end"
                }, 
                {
                    "event": "keypress", 
                    "next": "split_based_on_gender_anarchy_end"
                }
            ], 
            "type": "gather-input-on-call", 
            "name": "gender_anarchy_end", 
            "properties": {
                "say": "To find another means of defunding gender, press 1. To go to a different dystopia, press 2.\n\n Press 0 to return to the main menu. \n\n\n\n Press 9 to listen to these instructions again.", 
                "finish_on_key": "#", 
                "timeout": 10, 
                "offset": {
                    "y": 2800, 
                    "x": 3000
                }, 
                "gather_language": "en", 
                "profanity_filter": "true", 
                "speech_timeout": "auto", 
                "loop": 1, 
                "stop_gather": true
            }
        }, 
        {
            "transitions": [
                {
                    "event": "noMatch"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 1", 
                            "arguments": [
                                "{{widgets.gender_anarchy_end.Digits}}"
                            ], 
                            "value": "1"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_gender"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 2", 
                            "arguments": [
                                "{{widgets.gender_anarchy_end.Digits}}"
                            ], 
                            "value": "2"
                        }
                    ], 
                    "event": "match", 
                    "next": "dystopia_start"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 0", 
                            "arguments": [
                                "{{widgets.gender_anarchy_end.Digits}}"
                            ], 
                            "value": 0
                        }
                    ], 
                    "event": "match", 
                    "next": "main_menu"
                }, 
                {
                    "conditions": [
                        {
                            "type": "equal_to", 
                            "friendly_name": "If value equal to 9", 
                            "arguments": [
                                "{{widgets.gender_anarchy_end.Digits}}"
                            ], 
                            "value": 9
                        }
                    ], 
                    "event": "match", 
                    "next": "gender_anarchy_end"
                }
            ], 
            "type": "split-based-on", 
            "name": "split_based_on_gender_anarchy_end", 
            "properties": {
                "input": "{{widgets.gender_anarchy_end.Digits}}", 
                "offset": {
                    "y": 2950, 
                    "x": 3000
                }
            }
        }
    ], 
    "initial_state": "Trigger", 
    "flags": {
        "allow_concurrent_calls": true
    }, 
    "description": "VaporPhone"
}
